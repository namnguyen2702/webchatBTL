@{
    ViewData["Title"] = "Live Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
    :root {
        --zalo-blue: #0952c4;
        --zalo-grey: #f1f1f1;
        --chat-radius: 25px;
    }

    body {
        background-color: #eef5ff;
    }

    .chat-bubble {
        border-radius: var(--chat-radius);
        padding: 10px 14px;
        font-size: 15px;
        max-width: 60%;
        word-break: break-word;
        line-height: 1.4;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    .chat-me {
        background-color: var(--zalo-blue);
        color: white;
    }

    .chat-you {
        background-color: var(--zalo-grey);
        color: black;
    }

    .chat-file {
        margin-top: 8px;
        padding: 6px 10px;
        border-radius: 6px;
        display: inline-block;
        background-color: rgba(255, 255, 255, 0.2);
    }

    .chat-file-link {
        color: inherit;
        text-decoration: none;
        font-weight: 500;
    }

    .chat-file-link:hover {
        text-decoration: underline;
    }

    #friendList li:hover {
        background-color: #f5f5f5;
        cursor: pointer;
    }

    #chat-messages {
        background: linear-gradient(to bottom, #f9f9fb, #f4f7fa);
        padding: 15px;
        border-radius: 8px;
    }

    #toggleSidebarBtn {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        background-color: white;
        border: 1px solid #ccc;
    }

    #toggleSidebarBtn:hover {
        background-color: #f0f0f0;
    }

    @@media (max-width: 768px) {
        .container-fluid {
            padding: 0;
        }

        .row {
            flex-direction: column;
        }

        .col-md-3,
        .col-md-9 {
            width: 100% !important;
        }

        #chat-messages {
            height: 60vh;
            overflow-y: auto;
        }

        .chat-bubble {
            max-width: 85% !important;
        }
    }
</style>

<div class="container-fluid px-0">
    <div class="d-flex align-items-center my-2">
        <button class="btn btn-outline-secondary me-2" onclick="history.back()">
            <i class="fas fa-arrow-left"></i>
        </button>
    </div>
    <strong>Cuộc trò chuyện</strong>
    <div class="row">
        <button id="toggleSidebarBtn" class="btn btn-light rounded-circle shadow-sm d-md-none m-2">
            <i class="fas fa-bars"></i>
        </button>
        <div class="sidebar-container col-md-3 border-end d-md-block d-none" id="sidebar">
            <div class="p-3">
                <input type="text" class="form-control my-3" id="searchUser" placeholder="Tìm kiếm bạn bè...">
                <ul class="list-group" id="friendList"></ul>
            </div>
        </div>

        <div class="col-md-9 d-flex flex-column" style="height: 80vh;">
            <div class="p-2 border-bottom">
                <h5 id="chatWith">Vui lòng chọn người để bắt đầu</h5>
            </div>

            <div class="flex-grow-1 overflow-auto p-3" id="chat-messages"></div>

            <div class="input-group">
                <div class="input-group-prepend">
                    <button class="btn btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        <i class="fas fa-plus"></i>
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            <label class="dropdown-item">
                                <i class="fas fa-paperclip me-1"></i> Gửi file
                                <input type="file" id="fileInput" hidden />
                            </label>
                            <div id="selectedFileInfo" class="px-2 py-1 bg-light small text-muted rounded"
                                style="display: none; border: 1px dashed #ccc;"></div>
                        </li>
                    </ul>
                </div>
                <input type="text" id="chatInput" class="form-control" placeholder="Nhập tin nhắn...">
                <button class="btn btn-primary" id="btnSend"><i class="fas fa-paper-plane"></i></button>
            </div>
        </div>
    </div>
</div>
<script>
    // Tạm ghi đè fetch để debug mọi request
    const originalFetch = window.fetch;
    window.fetch = function (...args) {
        if (args[0] === "undefined" || args[0] === undefined) {
            console.error("⚠️ Lỗi fetch với URL undefined:", args);
        }
        return originalFetch.apply(this, args);
    };
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    const CURRENT_USER = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.UserProfile?.UserId ?? 0));
    let selectedReceiverId = null;

    const connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();

    connection.start().then(() => {
        console.log("SignalR connected");
        loadFriends();
    }).catch(console.error);

    connection.on("ReceiveMessage", (senderId, senderName, message, time, fileInfo) => {
        const isMe = senderId == CURRENT_USER;
        if (senderId == selectedReceiverId || isMe) appendMessage(isMe, senderName, message, time, fileInfo);
    });

    function loadFriends() {
        fetch('/ChatHub/GetFriendsInGroup')
            .then(res => res.json())
            .then(data => {
                const list = document.getElementById("friendList");
                list.innerHTML = "";
                data.forEach(friend => {
                    const li = document.createElement("li");
                    li.className = "list-group-item list-group-item-action";
                    li.innerHTML = `<img src="${friend.avatarUrl}" class="rounded-circle me-2" width="30"> ${friend.fullName}`;
                    li.onclick = () => {
                        selectedReceiverId = friend.userId;
                        document.getElementById("chatWith").textContent = friend.fullName;
                        document.getElementById("chat-messages").innerHTML = "";
                        loadMessages(friend.userId);
                        if (window.innerWidth <= 768) document.getElementById("sidebar").classList.add("d-none");
                    };
                    list.appendChild(li);
                });

                document.getElementById("searchUser").addEventListener("input", function () {
                    const keyword = this.value.toLowerCase();
                    [...list.children].forEach(item => item.style.display = item.textContent.toLowerCase().includes(keyword) ? 'block' : 'none');
                });
            })
            .catch(err => console.error("Lỗi khi tải danh sách bạn bè:", err));
    }

    function loadMessages(receiverId) {
        fetch(`/ChatHub/GetMessages?receiverId=${receiverId}`)
            .then(res => res.json())
            .then(data => {
                data.forEach(msg => {
                    const fileInfo = msg.filePath ? { url: msg.filePath, name: msg.fileName } : null;
                    appendMessage(msg.isMe, msg.sender, msg.message, msg.time, fileInfo);
                });
            });
    }

    function appendMessage(isMe, sender, message, time, fileInfo) {
        const container = document.getElementById("chat-messages");
        const div = document.createElement("div");
        div.className = `mb-2 d-flex ${isMe ? 'justify-content-end' : 'justify-content-start'}`;
        div.innerHTML = `
            <div class="chat-bubble ${isMe ? 'chat-me' : 'chat-you'}">
                <small><b>${sender}</b></small><br/>
                ${message || ''}
                ${fileInfo ? `<div class="chat-file"><a href="${fileInfo.url}" target="_blank" class="chat-file-link"><i class="fas fa-file-alt me-1"></i> ${fileInfo.name}</a></div>` : ''}
                <div><small class="text-muted">${new Date(time).toLocaleTimeString()}</small></div>
            </div>`;
        container.appendChild(div);
        container.scrollTop = container.scrollHeight;
    }

    document.getElementById("btnSend").onclick = () => {
        const message = document.getElementById("chatInput").value.trim();
        const file = document.getElementById("fileInput").files[0];

        if (!message && !file) return;

        if (file) {
            if (file.size > 10 * 1024 * 1024) return alert("File quá lớn. Chọn file ≤ 10MB.");
            const formData = new FormData();
            formData.append("file", file);
            fetch('/File/Upload', { method: 'POST', body: formData })
                .then(res => res.json())
                .then(r => r.success ? sendMessage(message, r.filePath, r.fileName) : alert("Upload lỗi: " + r.message));
        } else {
            sendMessage(message, null, null);
        }

        document.getElementById("chatInput").value = "";
        document.getElementById("fileInput").value = "";
        document.getElementById("selectedFileInfo").style.display = "none";
    };

    function sendMessage(text, filePath, fileName) {
        connection.invoke("SendMessage", selectedReceiverId, text, filePath, fileName).catch(console.error);
    }

    document.getElementById("toggleSidebarBtn").onclick = () => {
        document.getElementById("sidebar").classList.toggle("d-none");
    };

    document.getElementById("fileInput").onchange = function () {
        const file = this.files[0];
        const infoDiv = document.getElementById("selectedFileInfo");
        if (file) {
            infoDiv.innerHTML = `<span><i class="fas fa-file me-1"></i> ${file.name}</span>
                <button class="btn btn-sm btn-outline-danger ms-2" id="removeSelectedFile"><i class="fas fa-times"></i></button>`;
            infoDiv.style.display = "flex";
            document.getElementById("removeSelectedFile").onclick = () => {
                document.getElementById("fileInput").value = "";
                infoDiv.style.display = "none";
            };
        }
    };
</script>

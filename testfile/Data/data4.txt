// =============================
// Controllers/AdminUserController.cs
// =============================

using Microsoft.AspNetCore.Mvc;
using webchatBTL.Models;

namespace webchatBTL.Areas.Admin.Controllers
{
    [Area("Admin")]
    public class AdminUserController : Controller
    {
        private readonly WebchatBTLDbContext _context;

        public AdminUserController(WebchatBTLDbContext context)
        {
            _context = context;
        }

        // T·ª´ trang AdminUser click sang b√†i th·ª±c h√†nh
        public IActionResult RedirectToExercise()
        {
            return RedirectToAction("ListCards", "UserExercise", new { area = "" }); // Chuy·ªÉn sang controller kh√°c
        }
    }
}

// =============================
// Controllers/UserExerciseController.cs (m·ªõi ho√†n to√†n)
// =============================

using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using webchatBTL.Models;

namespace webchatBTL.Controllers
{
    public class UserExerciseController : Controller
    {
        private readonly WebchatBTLDbContext _context;

        public UserExerciseController(WebchatBTLDbContext context)
        {
            _context = context;
        }

        public async Task<IActionResult> ListCards()
        {
            var users = await _context.Users.ToListAsync();
            return View(users);
        }

        public IActionResult Create() => View();

        [HttpPost]
        public async Task<IActionResult> Create(User user)
        {
            if (ModelState.IsValid)
            {
                _context.Add(user);
                await _context.SaveChangesAsync();
                return RedirectToAction(nameof(ListCards));
            }
            return View(user);
        }

        public async Task<IActionResult> Edit(int id)
        {
            var user = await _context.Users.FindAsync(id);
            return View(user);
        }

        [HttpPost]
        public async Task<IActionResult> Edit(User user)
        {
            if (ModelState.IsValid)
            {
                _context.Update(user);
                await _context.SaveChangesAsync();
                return RedirectToAction(nameof(ListCards));
            }
            return View(user);
        }
    }
}

// =============================
// Controllers/UserApiController.cs (kh√¥ng ƒë·ªïi)
// =============================

using Microsoft.AspNetCore.Mvc;
using webchatBTL.Models;

namespace webchatBTL.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class UserApiController : ControllerBase
    {
        private readonly WebchatBTLDbContext _context;

        public UserApiController(WebchatBTLDbContext context)
        {
            _context = context;
        }

        [HttpDelete("delete/{id}")]
        public IActionResult Delete(int id)
        {
            var user = _context.Users.Find(id);
            if (user == null) return NotFound();

            _context.Users.Remove(user);
            _context.SaveChanges();
            return Ok(new { success = true });
        }
    }
}

// =============================
// Views/UserExercise/ListCards.cshtml (gi·ªëng b·∫£n c≈©, ƒë·ªïi namespace)
// =============================

@model IEnumerable<webchatBTL.Models.User>

@{
    ViewData["Title"] = "B√†i th·ª±c h√†nh: Danh s√°ch ng∆∞·ªùi d√πng";
}

<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <span class="nav-link active">B√†i t·∫≠p CRUD & Fetch</span>
    </li>
</ul>

<div class="container">
    <div class="row">
        @foreach (var user in Model)
        {
            <div class="col-md-4 col-12 mb-3">
                <div class="card shadow-sm h-100">
                    <div class="card-body">
                        <h5>@user.FullName</h5>
                        <p>
                            Email: @user.Email<br />
                            Phone: @user.Phone<br />
                            VerifyKey: <strong>@user.VerifiKey</strong>
                        </p>
                        <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@user.UserId">S·ª≠a</a>
                        <button class="btn btn-sm btn-danger" onclick="deleteUser(@user.UserId)">Xo√°</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
<script>
    function deleteUser(id) {
        if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën xo√° kh√¥ng?")) {
            fetch(`/api/userapi/delete/${id}`, { method: 'DELETE' })
                .then(res => res.json())
                .then(data => {
                    if (data.success) location.reload();
                    else alert("Xo√° th·∫•t b·∫°i");
                });
        }
    }
</script>
}

// =============================
// Views/UserExercise/Create.cshtml & Edit.cshtml gi·ªëng nh∆∞ c≈©
// =============================
// (b·∫°n ch·ªâ c·∫ßn copy 2 view ƒë√≥ t·ª´ AdminUser sang th∆∞ m·ª•c Views/UserExercise v√† gi·ªØ nguy√™n n·ªôi dung)




Gi·∫£i ph√°p: Th√™m 1 n√∫t chuy·ªÉn h∆∞·ªõng
üîß B∆∞·ªõc 1: Trong file Index.cshtml hi·ªán t·∫°i (trang danh s√°ch t√†i kho·∫£n qu·∫£n tr·ªã), b·∫°n ch√®n v√†o ngay ch·ªó menu ƒëi·ªÅu h∆∞·ªõng ho·∫∑c cu·ªëi ph·∫ßn header:
html
Sao ch√©p
Ch·ªânh s·ª≠a
<div class="text-right mb-3">
    <a asp-area="" asp-controller="UserExercise" asp-action="ListCards" class="btn btn-outline-info">
        üëâ L√†m b√†i th·ª±c h√†nh CRUD VerifyKey
    </a>
</div>